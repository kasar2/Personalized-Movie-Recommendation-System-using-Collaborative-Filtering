#include <iostream>
#include <fstream>
#include <sstream>
#include <vector>
#include <cmath>
#include <algorithm>
#include <map>

using namespace std;

class MovieRecommendationSystem {
private:
    vector<vector<int>> ratings; // User-Movie ratings matrix
    int numUsers;
    int numMovies;

public:
    MovieRecommendationSystem(const string& filename) {
        loadRatings(filename);
    }

    void loadRatings(const string& filename) {
        ifstream file(filename);
        string line;
        getline(file, line); // Skip header

        while (getline(file, line)) {
            stringstream ss(line);
            string user;
            getline(ss, user, ','); // Read user (not used)
            vector<int> userRatings;
            int rating;

            while (ss >> rating) {
                userRatings.push_back(rating);
                if (ss.peek() == ',') ss.ignore();
            }
            ratings.push_back(userRatings);
        }
        numUsers = ratings.size();
        numMovies = ratings[0].size();
    }

    double calculateSimilarity(int user1, int user2) {
        double sum = 0.0;
        double sum1 = 0.0;
        double sum2 = 0.0;
        double count = 0.0;

        for (int i = 0; i < numMovies; i++) {
            if (ratings[user1][i] > 0 && ratings[user2][i] > 0) {
                sum += ratings[user1][i] * ratings[user2][i];
                sum1 += ratings[user1][i] * ratings[user1][i];
                sum2 += ratings[user2][i] * ratings[user2][i];
                count++;
            }
        }

        if (count == 0) return 0; // No common ratings
        return sum / (sqrt(sum1) * sqrt(sum2));
    }

    vector<pair<int, double>> predictRatings(int user) {
        vector<pair<int, double>>
